// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: bosdyn/api/payload_estimation.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright (c) 2021 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Command the robot to stand and execute a routine to estimate the mass properties of an
/// unregistered payload attached to the robot.
public struct Bosdyn_Api_PayloadEstimationCommand {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// PayloadEstimation command request takes no additional arguments. The estimation routine
  /// takes about ~1min to run. Subsequent PayloadEstimationCommand requests issued while the 
  /// routine is in progress are ignored until the routine is completed.
  public struct Request {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  /// The PayloadEstimationCommand provides several pieces of feedback:
  ///   - If the routine is finished running (and its current progress).
  ///   - If the routine encountered any errors while running.
  ///   - The resulting payload estimated by the routine.
  public struct Feedback {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Status of the estimation routine.
    public var status: Bosdyn_Api_PayloadEstimationCommand.Feedback.Status = .unknown

    /// The approximate progress of the routine, range [0-1].
    public var progress: Float = 0

    /// Error status of the estimation routine.
    public var error: Bosdyn_Api_PayloadEstimationCommand.Feedback.Error = .unknown

    /// The resulting payload estimated by the estimation routine.
    public var estimatedPayload: Bosdyn_Api_Payload {
      get {return _estimatedPayload ?? Bosdyn_Api_Payload()}
      set {_estimatedPayload = newValue}
    }
    /// Returns true if `estimatedPayload` has been explicitly set.
    public var hasEstimatedPayload: Bool {return self._estimatedPayload != nil}
    /// Clears the value of `estimatedPayload`. Subsequent reads from it will return its default value.
    public mutating func clearEstimatedPayload() {self._estimatedPayload = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public enum Status: SwiftProtobuf.Enum {
      public typealias RawValue = Int
      case unknown // = 0

      /// Completed estimation routine successfully; estimated_payload is populated.
      case completed // = 1

      /// Completed estimation routine successfully, but estimated mass is small enough to
      /// not significantly impact mobility; estimated_payload is empty.
      case smallMass // = 2

      /// Estimation routine is currently running; estimated_payload is empty.
      case inProgress // = 3

      /// Error occurred during the routine; estaimted_payload is empty.
      case error // = 4
      case UNRECOGNIZED(Int)

      public init() {
        self = .unknown
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unknown
        case 1: self = .completed
        case 2: self = .smallMass
        case 3: self = .inProgress
        case 4: self = .error
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unknown: return 0
        case .completed: return 1
        case .smallMass: return 2
        case .inProgress: return 3
        case .error: return 4
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public enum Error: SwiftProtobuf.Enum {
      public typealias RawValue = Int
      case unknown // = 0

      /// No error has occurred.
      case none // = 1

      /// Robot failed to stand/change stance.
      case failedStand // = 2

      /// Failed to calculate results.
      case noResults // = 3
      case UNRECOGNIZED(Int)

      public init() {
        self = .unknown
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unknown
        case 1: self = .none
        case 2: self = .failedStand
        case 3: self = .noResults
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unknown: return 0
        case .none: return 1
        case .failedStand: return 2
        case .noResults: return 3
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public init() {}

    fileprivate var _estimatedPayload: Bosdyn_Api_Payload? = nil
  }

  public init() {}
}

#if swift(>=4.2)

extension Bosdyn_Api_PayloadEstimationCommand.Feedback.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Bosdyn_Api_PayloadEstimationCommand.Feedback.Status] = [
    .unknown,
    .completed,
    .smallMass,
    .inProgress,
    .error,
  ]
}

extension Bosdyn_Api_PayloadEstimationCommand.Feedback.Error: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Bosdyn_Api_PayloadEstimationCommand.Feedback.Error] = [
    .unknown,
    .none,
    .failedStand,
    .noResults,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bosdyn.api"

extension Bosdyn_Api_PayloadEstimationCommand: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PayloadEstimationCommand"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bosdyn_Api_PayloadEstimationCommand, rhs: Bosdyn_Api_PayloadEstimationCommand) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bosdyn_Api_PayloadEstimationCommand.Request: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Bosdyn_Api_PayloadEstimationCommand.protoMessageName + ".Request"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bosdyn_Api_PayloadEstimationCommand.Request, rhs: Bosdyn_Api_PayloadEstimationCommand.Request) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bosdyn_Api_PayloadEstimationCommand.Feedback: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Bosdyn_Api_PayloadEstimationCommand.protoMessageName + ".Feedback"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
    2: .same(proto: "progress"),
    3: .same(proto: "error"),
    4: .standard(proto: "estimated_payload"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.status)
      case 2: try decoder.decodeSingularFloatField(value: &self.progress)
      case 3: try decoder.decodeSingularEnumField(value: &self.error)
      case 4: try decoder.decodeSingularMessageField(value: &self._estimatedPayload)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.status != .unknown {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 1)
    }
    if self.progress != 0 {
      try visitor.visitSingularFloatField(value: self.progress, fieldNumber: 2)
    }
    if self.error != .unknown {
      try visitor.visitSingularEnumField(value: self.error, fieldNumber: 3)
    }
    if let v = self._estimatedPayload {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bosdyn_Api_PayloadEstimationCommand.Feedback, rhs: Bosdyn_Api_PayloadEstimationCommand.Feedback) -> Bool {
    if lhs.status != rhs.status {return false}
    if lhs.progress != rhs.progress {return false}
    if lhs.error != rhs.error {return false}
    if lhs._estimatedPayload != rhs._estimatedPayload {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bosdyn_Api_PayloadEstimationCommand.Feedback.Status: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "STATUS_UNKNOWN"),
    1: .same(proto: "STATUS_COMPLETED"),
    2: .same(proto: "STATUS_SMALL_MASS"),
    3: .same(proto: "STATUS_IN_PROGRESS"),
    4: .same(proto: "STATUS_ERROR"),
  ]
}

extension Bosdyn_Api_PayloadEstimationCommand.Feedback.Error: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ERROR_UNKNOWN"),
    1: .same(proto: "ERROR_NONE"),
    2: .same(proto: "ERROR_FAILED_STAND"),
    3: .same(proto: "ERROR_NO_RESULTS"),
  ]
}
