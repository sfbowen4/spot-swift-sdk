//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: bosdyn/api/data_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// The DataService is a mechanism for querying and managing data stored on robot.
///
/// Usage: instantiate `Bosdyn_Api_DataServiceClient`, then call methods of this protocol to make API calls.
public protocol Bosdyn_Api_DataServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Bosdyn_Api_DataServiceClientInterceptorFactoryProtocol? { get }

  func getDataIndex(
    _ request: Bosdyn_Api_GetDataIndexRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bosdyn_Api_GetDataIndexRequest, Bosdyn_Api_GetDataIndexResponse>

  func getEventsComments(
    _ request: Bosdyn_Api_GetEventsCommentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bosdyn_Api_GetEventsCommentsRequest, Bosdyn_Api_GetEventsCommentsResponse>

  func getDataBufferStatus(
    _ request: Bosdyn_Api_GetDataBufferStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bosdyn_Api_GetDataBufferStatusRequest, Bosdyn_Api_GetDataBufferStatusResponse>

  func getDataPages(
    _ request: Bosdyn_Api_GetDataPagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bosdyn_Api_GetDataPagesRequest, Bosdyn_Api_GetDataPagesResponse>

  func deleteDataPages(
    _ request: Bosdyn_Api_DeleteDataPagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bosdyn_Api_DeleteDataPagesRequest, Bosdyn_Api_DeleteDataPagesResponse>
}

extension Bosdyn_Api_DataServiceClientProtocol {
  public var serviceName: String {
    return "bosdyn.api.DataService"
  }

  /// Get index of current data matching a given DataQuery.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDataIndex.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDataIndex(
    _ request: Bosdyn_Api_GetDataIndexRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bosdyn_Api_GetDataIndexRequest, Bosdyn_Api_GetDataIndexResponse> {
    return self.makeUnaryCall(
      path: "/bosdyn.api.DataService/GetDataIndex",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDataIndexInterceptors() ?? []
    )
  }

  /// Get events and comments.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEventsComments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEventsComments(
    _ request: Bosdyn_Api_GetEventsCommentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bosdyn_Api_GetEventsCommentsRequest, Bosdyn_Api_GetEventsCommentsResponse> {
    return self.makeUnaryCall(
      path: "/bosdyn.api.DataService/GetEventsComments",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsCommentsInterceptors() ?? []
    )
  }

  /// Get basic stats on data buffer storage.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDataBufferStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDataBufferStatus(
    _ request: Bosdyn_Api_GetDataBufferStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bosdyn_Api_GetDataBufferStatusRequest, Bosdyn_Api_GetDataBufferStatusResponse> {
    return self.makeUnaryCall(
      path: "/bosdyn.api.DataService/GetDataBufferStatus",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDataBufferStatusInterceptors() ?? []
    )
  }

  /// Get a list pf pages matching a given time range
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDataPages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDataPages(
    _ request: Bosdyn_Api_GetDataPagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bosdyn_Api_GetDataPagesRequest, Bosdyn_Api_GetDataPagesResponse> {
    return self.makeUnaryCall(
      path: "/bosdyn.api.DataService/GetDataPages",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDataPagesInterceptors() ?? []
    )
  }

  /// Delete a list of pages matching a given time range or page ids
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDataPages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteDataPages(
    _ request: Bosdyn_Api_DeleteDataPagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bosdyn_Api_DeleteDataPagesRequest, Bosdyn_Api_DeleteDataPagesResponse> {
    return self.makeUnaryCall(
      path: "/bosdyn.api.DataService/DeleteDataPages",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDataPagesInterceptors() ?? []
    )
  }
}

public protocol Bosdyn_Api_DataServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'getDataIndex'.
  func makeGetDataIndexInterceptors() -> [ClientInterceptor<Bosdyn_Api_GetDataIndexRequest, Bosdyn_Api_GetDataIndexResponse>]

  /// - Returns: Interceptors to use when invoking 'getEventsComments'.
  func makeGetEventsCommentsInterceptors() -> [ClientInterceptor<Bosdyn_Api_GetEventsCommentsRequest, Bosdyn_Api_GetEventsCommentsResponse>]

  /// - Returns: Interceptors to use when invoking 'getDataBufferStatus'.
  func makeGetDataBufferStatusInterceptors() -> [ClientInterceptor<Bosdyn_Api_GetDataBufferStatusRequest, Bosdyn_Api_GetDataBufferStatusResponse>]

  /// - Returns: Interceptors to use when invoking 'getDataPages'.
  func makeGetDataPagesInterceptors() -> [ClientInterceptor<Bosdyn_Api_GetDataPagesRequest, Bosdyn_Api_GetDataPagesResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteDataPages'.
  func makeDeleteDataPagesInterceptors() -> [ClientInterceptor<Bosdyn_Api_DeleteDataPagesRequest, Bosdyn_Api_DeleteDataPagesResponse>]
}

public final class Bosdyn_Api_DataServiceClient: Bosdyn_Api_DataServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Bosdyn_Api_DataServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the bosdyn.api.DataService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Bosdyn_Api_DataServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// The DataService is a mechanism for querying and managing data stored on robot.
///
/// To build a server, implement a class that conforms to this protocol.
public protocol Bosdyn_Api_DataServiceProvider: CallHandlerProvider {
  var interceptors: Bosdyn_Api_DataServiceServerInterceptorFactoryProtocol? { get }

  /// Get index of current data matching a given DataQuery.
  func getDataIndex(request: Bosdyn_Api_GetDataIndexRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Bosdyn_Api_GetDataIndexResponse>

  /// Get events and comments.
  func getEventsComments(request: Bosdyn_Api_GetEventsCommentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Bosdyn_Api_GetEventsCommentsResponse>

  /// Get basic stats on data buffer storage.
  func getDataBufferStatus(request: Bosdyn_Api_GetDataBufferStatusRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Bosdyn_Api_GetDataBufferStatusResponse>

  /// Get a list pf pages matching a given time range
  func getDataPages(request: Bosdyn_Api_GetDataPagesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Bosdyn_Api_GetDataPagesResponse>

  /// Delete a list of pages matching a given time range or page ids
  func deleteDataPages(request: Bosdyn_Api_DeleteDataPagesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Bosdyn_Api_DeleteDataPagesResponse>
}

extension Bosdyn_Api_DataServiceProvider {
  public var serviceName: Substring { return "bosdyn.api.DataService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetDataIndex":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bosdyn_Api_GetDataIndexRequest>(),
        responseSerializer: ProtobufSerializer<Bosdyn_Api_GetDataIndexResponse>(),
        interceptors: self.interceptors?.makeGetDataIndexInterceptors() ?? [],
        userFunction: self.getDataIndex(request:context:)
      )

    case "GetEventsComments":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bosdyn_Api_GetEventsCommentsRequest>(),
        responseSerializer: ProtobufSerializer<Bosdyn_Api_GetEventsCommentsResponse>(),
        interceptors: self.interceptors?.makeGetEventsCommentsInterceptors() ?? [],
        userFunction: self.getEventsComments(request:context:)
      )

    case "GetDataBufferStatus":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bosdyn_Api_GetDataBufferStatusRequest>(),
        responseSerializer: ProtobufSerializer<Bosdyn_Api_GetDataBufferStatusResponse>(),
        interceptors: self.interceptors?.makeGetDataBufferStatusInterceptors() ?? [],
        userFunction: self.getDataBufferStatus(request:context:)
      )

    case "GetDataPages":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bosdyn_Api_GetDataPagesRequest>(),
        responseSerializer: ProtobufSerializer<Bosdyn_Api_GetDataPagesResponse>(),
        interceptors: self.interceptors?.makeGetDataPagesInterceptors() ?? [],
        userFunction: self.getDataPages(request:context:)
      )

    case "DeleteDataPages":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bosdyn_Api_DeleteDataPagesRequest>(),
        responseSerializer: ProtobufSerializer<Bosdyn_Api_DeleteDataPagesResponse>(),
        interceptors: self.interceptors?.makeDeleteDataPagesInterceptors() ?? [],
        userFunction: self.deleteDataPages(request:context:)
      )

    default:
      return nil
    }
  }
}

public protocol Bosdyn_Api_DataServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'getDataIndex'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDataIndexInterceptors() -> [ServerInterceptor<Bosdyn_Api_GetDataIndexRequest, Bosdyn_Api_GetDataIndexResponse>]

  /// - Returns: Interceptors to use when handling 'getEventsComments'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetEventsCommentsInterceptors() -> [ServerInterceptor<Bosdyn_Api_GetEventsCommentsRequest, Bosdyn_Api_GetEventsCommentsResponse>]

  /// - Returns: Interceptors to use when handling 'getDataBufferStatus'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDataBufferStatusInterceptors() -> [ServerInterceptor<Bosdyn_Api_GetDataBufferStatusRequest, Bosdyn_Api_GetDataBufferStatusResponse>]

  /// - Returns: Interceptors to use when handling 'getDataPages'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDataPagesInterceptors() -> [ServerInterceptor<Bosdyn_Api_GetDataPagesRequest, Bosdyn_Api_GetDataPagesResponse>]

  /// - Returns: Interceptors to use when handling 'deleteDataPages'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteDataPagesInterceptors() -> [ServerInterceptor<Bosdyn_Api_DeleteDataPagesRequest, Bosdyn_Api_DeleteDataPagesResponse>]
}
